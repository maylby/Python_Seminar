# Знакомство с языком Python (семинары)
# Урок 8. Работа с файлами
# https://gb.ru/lessons/391159


# 00:09:00
''' 
Разбор ДЗ-07

Задача 1 

print_operation_table
'''
# https://autotest.gb.ru/problems/83?lesson_id=391158&_ga=2.55648939.1223630724.1705653773-1736153193.1704617193
'''

Напишите функцию 
'''
# print_operation_table(operation, num_rows, num_columns), 
'''
которая принимает в качестве аргумента функцию, 
вычисляющую элемент по номеру строки и столбца. 
По умолчанию номер столбца и строки = 9.

Аргументы num_rows и num_columns указывают 
число строк и столбцов таблицы, 
которые должны быть распечатаны.

Нумерация строк и столбцов идет с единицы 
(подумайте, почему не с нуля).

Если строк меньше двух, выдайте текст ОШИБКА! 
Размерности таблицы должны быть больше 2!.

Примечание: 
бинарной операцией называется любая операция, у которой 
ровно два аргумента, как, например, у операции умножения.

Между элементами должен быть 1 пробел, 
в конце строки пробел не нужен.

Пример
'''
# На входе:
# print_operation_table(lambda x, y: x * y)

# На выходе:
# 1 2 3
# 2 4 6 
# 3 6 9

""" 
Решение


Вариант 1 
(Марина Вершинина)
"""
# num_rows = int(input('Number rows: '))
# num_columns = int(input('Number columns: '))

# def print_operation_table(operation, num_rows, num_columns):
#     res = []
#     if num_rows < 2:
#         print('Error!')
#     else:
#         for i in range(1, num_rows + 1):
#             for j in range(1, num_columns + 1):
#                 res.append(operation(i, j))

#             print(*res) # вариант вывода 1
#             res = [] # обнуление списка для каждой новой строки таблицы,
#                      # т.е. каждая строка таблицы - это новый список,
#                      # передаваемый после заполнения в первый "res" (стр.62),
#                      # где и записывается вся таблица до завершения цикла 

#         # for i in range(0, len(res), num_columns):
#         #     print(*res[0 + i: num_columns + i]) # вариант вывода 2

# print_operation_table(lambda x, y: x * y, num_rows, num_columns)


# 00:18:25
''' 
Решение можно было сделать в одну строку (Сердюков):
Пустая строка, куда мы добавляем значения со занком плюс
'''


# 00:19:30
''' 
Задача 2 
'''
# https://autotest.gb.ru/problems/82?lesson_id=391158&_ga=2.55648939.1223630724.1705653773-1736153193.1704617193
'''
Винни Пух

Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. 
Поскольку разобраться в его кричалках не настолько просто, 
насколько легко он их придумывает, Вам стоит написать программу.

Винни-Пух считает, что ритм есть, если число слогов (число гласных букв) 
в каждой фразе стихотворения одинаковое.
Фраза может состоять из одного слова, 
если во фразе несколько слов, то они разделяются дефисами.
Фразы отделяются друг от друга пробелами.

Стихотворение  Винни-Пух передаст вам автоматически 
в переменную stroka в виде строки. В ответе напишите 
Парам пам-пам, если с ритмом все в порядке и 
Пам парам, если с ритмом не все в порядке.
'''
# P.S. 
# Правильность ритма определяется 
# равным количеством гласных в каждой строке.
# Количество согласных в строке на ритм не влияет.
'''
Если фраза только одна, то ритм определить не получится 
и необходимо вывести: 
"Количество фраз должно быть больше одной!".

Пример
'''
# На входе:
# stroka = 'пара-ра-рам рам-пам-папам па-ра-па-дам'

# На выходе:
# Парам пам-пам


'''
Решение
'''
stroka = 'пара-ра-рам тарам-пам-пам па-ра-па-дам'
list_1 = stroka.split(" ")
glasny = ['а','я','о','ё','у','ю','ы','и','э','е']
res = list()
def puh():
    if len(list_1) == 1: return "Фраз должно быть больше одной"
    else:
        for i in list_1:
            count = 0
            for j in i:
                if j in glasny:
                    count += 1
            res.append(count)
            
        if len(res) == res.count(res[0]): # 1-й вариант сравнения
        # if len(set(res)) == 1: # 2-й вариант сравнения
            return 'Парам пам-пам'
        return 'Пам парам'
    
print(puh())